.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 10, 15	sdk_version 10, 15, 6
	.intel_syntax noprefix
	.globl	_main                   ## -- Begin function main
	.p2align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	dword ptr [rbp - 4], 0
	mov	edi, 16
	call	_operator new(unsigned long)
	mov	rdi, rax
	mov	qword ptr [rbp - 24], rax ## 8-byte Spill
	call	_CoolClass::CoolClass()
	mov	rax, qword ptr [rbp - 24] ## 8-byte Reload
	mov	qword ptr [rbp - 16], rax
	lea	rdi, [rbp - 8]
	mov	esi, 42
	call	_PlainOldClass::set(int)
	mov	rax, qword ptr [rbp - 16]
	mov	rcx, qword ptr [rax]
	mov	rdi, rax
	mov	esi, 42
	call	qword ptr [rcx]
	mov	rdi, qword ptr [rip   __ZNSt3__14coutE@GOTPCREL]
	lea	rsi, [rip   L_.str]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	lea	rdi, [rbp - 8]
	mov	qword ptr [rbp - 32], rax ## 8-byte Spill
	call	_PlainOldClass::get()
	mov	rdi, qword ptr [rbp - 32] ## 8-byte Reload
	mov	esi, eax
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int)
	mov	rdi, rax
	lea	rsi, [rip   _std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::endl<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >& (*)(std::__1::basic_ostream<char, std::__1::char_traits<char> >&))
	mov	rdi, qword ptr [rip   __ZNSt3__14coutE@GOTPCREL]
	lea	rsi, [rip   L_.str.1]
	mov	qword ptr [rbp - 40], rax ## 8-byte Spill
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	mov	rcx, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rcx]
	mov	rdi, rcx
	mov	qword ptr [rbp - 48], rax ## 8-byte Spill
	call	qword ptr [rdx   8]
	mov	rdi, qword ptr [rbp - 48] ## 8-byte Reload
	mov	esi, eax
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int)
	mov	rdi, rax
	lea	rsi, [rip   _std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::endl<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >& (*)(std::__1::basic_ostream<char, std::__1::char_traits<char> >&))
	xor	r8d, r8d
	mov	qword ptr [rbp - 56], rax ## 8-byte Spill
	mov	eax, r8d
	add	rsp, 64
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_CoolClass::CoolClass()      ## -- Begin function CoolClass::CoolClass()
	.weak_def_can_be_hidden	_CoolClass::CoolClass()
	.p2align	4, 0x90
_CoolClass::CoolClass():                     ## @CoolClass::CoolClass()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_CoolClass::CoolClass()
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_PlainOldClass::set(int) ## -- Begin function PlainOldClass::set(int)
	.weak_definition	_PlainOldClass::set(int)
	.p2align	4, 0x90
_PlainOldClass::set(int):              ## @PlainOldClass::set(int)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	dword ptr [rbp - 12], esi
	mov	rax, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rbp - 12]
	mov	dword ptr [rax], ecx
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) ## -- Begin function std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	.weak_definition	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	.p2align	4, 0x90
_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*): ## @std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi ## 8-byte Spill
	mov	rdi, rax
	mov	qword ptr [rbp - 32], rsi ## 8-byte Spill
	call	_std::__1::char_traits<char>::length(char const*)
	mov	rdi, qword ptr [rbp - 24] ## 8-byte Reload
	mov	rsi, qword ptr [rbp - 32] ## 8-byte Reload
	mov	rdx, rax
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	add	rsp, 32
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_PlainOldClass::get() ## -- Begin function PlainOldClass::get()
	.weak_definition	_PlainOldClass::get()
	.p2align	4, 0x90
_PlainOldClass::get():              ## @PlainOldClass::get()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	eax, dword ptr [rax]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >& (*)(std::__1::basic_ostream<char, std::__1::char_traits<char> >&))
_std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >& (*)(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)): ## @std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >& (*)(std::__1::basic_ostream<char, std::__1::char_traits<char> >&))
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	call	qword ptr [rbp - 16]
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::endl<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::endl<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&): ## @std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::endl<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rax]
	mov	rcx, qword ptr [rcx - 24]
	add	rax, rcx
	mov	qword ptr [rbp - 16], rdi ## 8-byte Spill
	mov	rdi, rax
	mov	esi, 10
	call	_std::__1::basic_ios<char, std::__1::char_traits<char> >::widen(char) const
	mov	rdi, qword ptr [rbp - 16] ## 8-byte Reload
	movsx	esi, al
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::put(char)
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 24], rax ## 8-byte Spill
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::flush()
	mov	rcx, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 32], rax ## 8-byte Spill
	mov	rax, rcx
	add	rsp, 32
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_CoolClass::CoolClass()      ## -- Begin function CoolClass::CoolClass()
	.weak_def_can_be_hidden	_CoolClass::CoolClass()
	.p2align	4, 0x90
_CoolClass::CoolClass():                     ## @CoolClass::CoolClass()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, rax
	mov	rdi, rcx
	mov	qword ptr [rbp - 16], rax ## 8-byte Spill
	call	_Base::Base()
	mov	rax, qword ptr [rip   __ZTV9CoolClass@GOTPCREL]
	add	rax, 16
	mov	rcx, qword ptr [rbp - 16] ## 8-byte Reload
	mov	qword ptr [rcx], rax
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_Base::Base()           ## -- Begin function Base::Base()
	.weak_def_can_be_hidden	_Base::Base()
	.p2align	4, 0x90
_Base::Base():                          ## @Base::Base()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rax, qword ptr [rip   __ZTV4Base@GOTPCREL]
	add	rax, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rcx, qword ptr [rbp - 8]
	mov	qword ptr [rcx], rax
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_CoolClass::set(int)    ## -- Begin function CoolClass::set(int)
	.weak_def_can_be_hidden	_CoolClass::set(int)
	.p2align	4, 0x90
_CoolClass::set(int):                   ## @CoolClass::set(int)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	dword ptr [rbp - 12], esi
	mov	rax, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rbp - 12]
	mov	dword ptr [rax   8], ecx
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_CoolClass::get()    ## -- Begin function CoolClass::get()
	.weak_def_can_be_hidden	_CoolClass::get()
	.p2align	4, 0x90
_CoolClass::get():                   ## @CoolClass::get()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	eax, dword ptr [rax   8]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) ## -- Begin function std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	.weak_definition	_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
	.p2align	4, 0x90
_std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long): ## @std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, ___gxx_personality_v0
	.cfi_lsda 16, Lexception0
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 160
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rsi, qword ptr [rbp - 8]
Ltmp0:
	lea	rdi, [rbp - 40]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
Ltmp1:
	jmp	LBB11_1
LBB11_1:
Ltmp2:
	lea	rdi, [rbp - 40]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::operator bool() const
Ltmp3:
	mov	byte ptr [rbp - 73], al ## 1-byte Spill
	jmp	LBB11_2
LBB11_2:
	mov	al, byte ptr [rbp - 73] ## 1-byte Reload
	test	al, 1
	jne	LBB11_3
	jmp	LBB11_15
LBB11_3:
	mov	rsi, qword ptr [rbp - 8]
	lea	rdi, [rbp - 72]
	call	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
	mov	rsi, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rax]
	mov	rcx, qword ptr [rcx - 24]
	add	rax, rcx
Ltmp4:
	mov	rdi, rax
	mov	qword ptr [rbp - 88], rsi ## 8-byte Spill
	call	_std::__1::ios_base::flags() const
Ltmp5:
	mov	dword ptr [rbp - 92], eax ## 4-byte Spill
	jmp	LBB11_4
LBB11_4:
	mov	eax, dword ptr [rbp - 92] ## 4-byte Reload
	and	eax, 176
	cmp	eax, 32
	jne	LBB11_6
## ».5:
	mov	rax, qword ptr [rbp - 16]
	add	rax, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 104], rax ## 8-byte Spill
	jmp	LBB11_7
LBB11_6:
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 104], rax ## 8-byte Spill
LBB11_7:
	mov	rax, qword ptr [rbp - 104] ## 8-byte Reload
	mov	rcx, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 24]
	add	rcx, rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi - 24]
	add	rdx, rsi
Ltmp6:
	mov	rdi, rdx
	mov	qword ptr [rbp - 112], rax ## 8-byte Spill
	mov	qword ptr [rbp - 120], rcx ## 8-byte Spill
	mov	qword ptr [rbp - 128], rdx ## 8-byte Spill
	call	_std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const
Ltmp7:
	mov	byte ptr [rbp - 129], al ## 1-byte Spill
	jmp	LBB11_8
LBB11_8:
	mov	rdi, qword ptr [rbp - 72]
Ltmp8:
	mov	al, byte ptr [rbp - 129] ## 1-byte Reload
	movsx	r9d, al
	mov	rsi, qword ptr [rbp - 88] ## 8-byte Reload
	mov	rdx, qword ptr [rbp - 112] ## 8-byte Reload
	mov	rcx, qword ptr [rbp - 120] ## 8-byte Reload
	mov	r8, qword ptr [rbp - 128] ## 8-byte Reload
	call	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
Ltmp9:
	mov	qword ptr [rbp - 144], rax ## 8-byte Spill
	jmp	LBB11_9
LBB11_9:
	mov	rax, qword ptr [rbp - 144] ## 8-byte Reload
	mov	qword ptr [rbp - 64], rax
	lea	rdi, [rbp - 64]
	call	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed() const
	test	al, 1
	jne	LBB11_10
	jmp	LBB11_14
LBB11_10:
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rax]
	mov	rcx, qword ptr [rcx - 24]
	add	rax, rcx
Ltmp10:
	mov	esi, 5
	mov	rdi, rax
	call	_std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate(unsigned int)
Ltmp11:
	jmp	LBB11_11
LBB11_11:
	jmp	LBB11_14
LBB11_12:
Ltmp17:
                                        ## kill: def $edx killed $edx killed $rdx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], edx
	jmp	LBB11_18
LBB11_13:
Ltmp12:
                                        ## kill: def $edx killed $edx killed $rdx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], edx
Ltmp13:
	lea	rdi, [rbp - 40]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
Ltmp14:
	jmp	LBB11_17
LBB11_14:
	jmp	LBB11_15
LBB11_15:
Ltmp15:
	lea	rdi, [rbp - 40]
	call	_std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
Ltmp16:
	jmp	LBB11_16
LBB11_16:
	jmp	LBB11_20
LBB11_17:
	jmp	LBB11_18
LBB11_18:
	mov	rdi, qword ptr [rbp - 48]
	call	___cxa_begin_catch
	mov	rcx, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rcx]
	mov	rdx, qword ptr [rdx - 24]
	add	rcx, rdx
Ltmp18:
	mov	rdi, rcx
	mov	qword ptr [rbp - 152], rax ## 8-byte Spill
	call	_std::__1::ios_base::__set_badbit_and_consider_rethrow()
Ltmp19:
	jmp	LBB11_19
LBB11_19:
	call	___cxa_end_catch
LBB11_20:
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 160
	pop	rbp
	ret
LBB11_21:
Ltmp20:
                                        ## kill: def $edx killed $edx killed $rdx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], edx
Ltmp21:
	call	___cxa_end_catch
Ltmp22:
	jmp	LBB11_22
LBB11_22:
	jmp	LBB11_23
LBB11_23:
	mov	rdi, qword ptr [rbp - 48]
	call	__Unwind_Resume
	ud2
LBB11_24:
Ltmp23:
	mov	rdi, rax
	mov	qword ptr [rbp - 160], rdx ## 8-byte Spill
	call	___clang_call_terminate
Lfunc_end0:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table11:
Lexception0:
	.byte	255                     ## @LPStart Encoding = omit
	.byte	155                     ## @TType Encoding = indirect pcrel sdata4
	.uleb128 Lttbase0-Lttbaseref0
Lttbaseref0:
	.byte	1                       ## Call site Encoding = uleb128
	.uleb128 Lcst_end0-Lcst_begin0
Lcst_begin0:
	.uleb128 Ltmp0-Lfunc_begin0     ## >> Call Site 1 <<
	.uleb128 Ltmp1-Ltmp0            ##   Call between Ltmp0 and Ltmp1
	.uleb128 Ltmp17-Lfunc_begin0    ##     jumps to Ltmp17
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp2-Lfunc_begin0     ## >> Call Site 2 <<
	.uleb128 Ltmp11-Ltmp2           ##   Call between Ltmp2 and Ltmp11
	.uleb128 Ltmp12-Lfunc_begin0    ##     jumps to Ltmp12
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp13-Lfunc_begin0    ## >> Call Site 3 <<
	.uleb128 Ltmp14-Ltmp13          ##   Call between Ltmp13 and Ltmp14
	.uleb128 Ltmp23-Lfunc_begin0    ##     jumps to Ltmp23
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp15-Lfunc_begin0    ## >> Call Site 4 <<
	.uleb128 Ltmp16-Ltmp15          ##   Call between Ltmp15 and Ltmp16
	.uleb128 Ltmp17-Lfunc_begin0    ##     jumps to Ltmp17
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp16-Lfunc_begin0    ## >> Call Site 5 <<
	.uleb128 Ltmp18-Ltmp16          ##   Call between Ltmp16 and Ltmp18
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp18-Lfunc_begin0    ## >> Call Site 6 <<
	.uleb128 Ltmp19-Ltmp18          ##   Call between Ltmp18 and Ltmp19
	.uleb128 Ltmp20-Lfunc_begin0    ##     jumps to Ltmp20
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp19-Lfunc_begin0    ## >> Call Site 7 <<
	.uleb128 Ltmp21-Ltmp19          ##   Call between Ltmp19 and Ltmp21
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp21-Lfunc_begin0    ## >> Call Site 8 <<
	.uleb128 Ltmp22-Ltmp21          ##   Call between Ltmp21 and Ltmp22
	.uleb128 Ltmp23-Lfunc_begin0    ##     jumps to Ltmp23
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp22-Lfunc_begin0    ## >> Call Site 9 <<
	.uleb128 Lfunc_end0-Ltmp22      ##   Call between Ltmp22 and Lfunc_end0
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
Lcst_end0:
	.byte	1                       ## >> Action Record 1 <<
                                        ##   Catch TypeInfo 1
	.byte	0                       ##   No further actions
	.p2align	2
                                        ## >> Catch TypeInfos <<
	.long	0                       ## TypeInfo 1
Lttbase0:
	.p2align	2
                                        ## -- End function
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_std::__1::char_traits<char>::length(char const*) ## -- Begin function std::__1::char_traits<char>::length(char const*)
	.weak_definition	_std::__1::char_traits<char>::length(char const*)
	.p2align	4, 0x90
_std::__1::char_traits<char>::length(char const*):  ## @std::__1::char_traits<char>::length(char const*)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_strlen
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::operator bool() const
_std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::operator bool() const: ## @std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::operator bool() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	cl, byte ptr [rax]
	and	cl, 1
	movzx	eax, cl
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.private_extern	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) ## -- Begin function std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
	.globl	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
	.weak_definition	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
	.p2align	4, 0x90
_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char): ## @std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, ___gxx_personality_v0
	.cfi_lsda 16, Lexception1
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 224
                                        ## kill: def $r9b killed $r9b killed $r9d
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 24], rsi
	mov	qword ptr [rbp - 32], rdx
	mov	qword ptr [rbp - 40], rcx
	mov	qword ptr [rbp - 48], r8
	mov	byte ptr [rbp - 49], r9b
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 168], rax ## 8-byte Spill
	call	_std::__1::__get_nullptr_t()
	mov	qword ptr [rbp - 64], rax
	lea	rdi, [rbp - 64]
	call	_std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const
	mov	rcx, qword ptr [rbp - 168] ## 8-byte Reload
	cmp	rcx, rax
	jne	LBB14_2
## ».1:
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 8], rax
	jmp	LBB14_25
LBB14_2:
	mov	rax, qword ptr [rbp - 40]
	mov	rcx, qword ptr [rbp - 24]
	sub	rax, rcx
	mov	qword ptr [rbp - 72], rax
	mov	rdi, qword ptr [rbp - 48]
	call	_std::__1::ios_base::width() const
	mov	qword ptr [rbp - 80], rax
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, qword ptr [rbp - 72]
	jle	LBB14_4
## ».3:
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 80]
	sub	rcx, rax
	mov	qword ptr [rbp - 80], rcx
	jmp	LBB14_5
LBB14_4:
	mov	qword ptr [rbp - 80], 0
LBB14_5:
	mov	rax, qword ptr [rbp - 32]
	mov	rcx, qword ptr [rbp - 24]
	sub	rax, rcx
	mov	qword ptr [rbp - 88], rax
	cmp	qword ptr [rbp - 88], 0
	jle	LBB14_9
## ».6:
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 88]
	call	_std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn(char const*, long)
	cmp	rax, qword ptr [rbp - 88]
	je	LBB14_8
## ».7:
	call	_std::__1::__get_nullptr_t()
	mov	qword ptr [rbp - 96], rax
	lea	rdi, [rbp - 96]
	call	_std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const
	mov	qword ptr [rbp - 16], rax
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 8], rax
	jmp	LBB14_25
LBB14_8:
	jmp	LBB14_9
LBB14_9:
	cmp	qword ptr [rbp - 80], 0
	jle	LBB14_20
## ».10:
	mov	rsi, qword ptr [rbp - 80]
	movsx	edx, byte ptr [rbp - 49]
	lea	rax, [rbp - 120]
	mov	rdi, rax
	mov	qword ptr [rbp - 176], rax ## 8-byte Spill
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char)
	mov	rdi, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 176] ## 8-byte Reload
	mov	qword ptr [rbp - 184], rdi ## 8-byte Spill
	mov	rdi, rax
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data() const
	mov	rdx, qword ptr [rbp - 80]
Ltmp24:
	mov	rdi, qword ptr [rbp - 184] ## 8-byte Reload
	mov	rsi, rax
	call	_std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn(char const*, long)
Ltmp25:
	mov	qword ptr [rbp - 192], rax ## 8-byte Spill
	jmp	LBB14_11
LBB14_11:
	mov	rax, qword ptr [rbp - 192] ## 8-byte Reload
	cmp	rax, qword ptr [rbp - 80]
	je	LBB14_16
## ».12:
Ltmp26:
	call	_std::__1::__get_nullptr_t()
Ltmp27:
	mov	qword ptr [rbp - 200], rax ## 8-byte Spill
	jmp	LBB14_13
LBB14_13:
	mov	rax, qword ptr [rbp - 200] ## 8-byte Reload
	mov	qword ptr [rbp - 144], rax
Ltmp28:
	lea	rdi, [rbp - 144]
	call	_std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const
Ltmp29:
	mov	qword ptr [rbp - 208], rax ## 8-byte Spill
	jmp	LBB14_14
LBB14_14:
	mov	rax, qword ptr [rbp - 208] ## 8-byte Reload
	mov	qword ptr [rbp - 16], rax
	mov	rcx, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 8], rcx
	mov	dword ptr [rbp - 148], 1
	jmp	LBB14_17
LBB14_15:
Ltmp30:
                                        ## kill: def $edx killed $edx killed $rdx
	mov	qword ptr [rbp - 128], rax
	mov	dword ptr [rbp - 132], edx
Ltmp31:
	lea	rdi, [rbp - 120]
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
Ltmp32:
	jmp	LBB14_19
LBB14_16:
	mov	dword ptr [rbp - 148], 0
LBB14_17:
	lea	rdi, [rbp - 120]
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
	mov	eax, dword ptr [rbp - 148]
	test	eax, eax
	je	LBB14_18
	jmp	LBB14_29
LBB14_29:
	jmp	LBB14_25
LBB14_18:
	jmp	LBB14_20
LBB14_19:
	jmp	LBB14_26
LBB14_20:
	mov	rax, qword ptr [rbp - 40]
	mov	rcx, qword ptr [rbp - 32]
	sub	rax, rcx
	mov	qword ptr [rbp - 88], rax
	cmp	qword ptr [rbp - 88], 0
	jle	LBB14_24
## ».21:
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 32]
	mov	rdx, qword ptr [rbp - 88]
	call	_std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn(char const*, long)
	cmp	rax, qword ptr [rbp - 88]
	je	LBB14_23
## ».22:
	call	_std::__1::__get_nullptr_t()
	mov	qword ptr [rbp - 160], rax
	lea	rdi, [rbp - 160]
	call	_std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const
	mov	qword ptr [rbp - 16], rax
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 8], rax
	jmp	LBB14_25
LBB14_23:
	jmp	LBB14_24
LBB14_24:
	xor	eax, eax
	mov	esi, eax
	mov	rdi, qword ptr [rbp - 48]
	call	_std::__1::ios_base::width(long)
	mov	rcx, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 8], rcx
LBB14_25:
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 224
	pop	rbp
	ret
LBB14_26:
	mov	rdi, qword ptr [rbp - 128]
	call	__Unwind_Resume
	ud2
LBB14_27:
Ltmp33:
	mov	rdi, rax
	mov	qword ptr [rbp - 216], rdx ## 8-byte Spill
	call	___clang_call_terminate
## ».28:
	ud2
Lfunc_end1:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table14:
Lexception1:
	.byte	255                     ## @LPStart Encoding = omit
	.byte	155                     ## @TType Encoding = indirect pcrel sdata4
	.uleb128 Lttbase1-Lttbaseref1
Lttbaseref1:
	.byte	1                       ## Call site Encoding = uleb128
	.uleb128 Lcst_end1-Lcst_begin1
Lcst_begin1:
	.uleb128 Lfunc_begin1-Lfunc_begin1 ## >> Call Site 1 <<
	.uleb128 Ltmp24-Lfunc_begin1    ##   Call between Lfunc_begin1 and Ltmp24
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp24-Lfunc_begin1    ## >> Call Site 2 <<
	.uleb128 Ltmp29-Ltmp24          ##   Call between Ltmp24 and Ltmp29
	.uleb128 Ltmp30-Lfunc_begin1    ##     jumps to Ltmp30
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp31-Lfunc_begin1    ## >> Call Site 3 <<
	.uleb128 Ltmp32-Ltmp31          ##   Call between Ltmp31 and Ltmp32
	.uleb128 Ltmp33-Lfunc_begin1    ##     jumps to Ltmp33
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp32-Lfunc_begin1    ## >> Call Site 4 <<
	.uleb128 Lfunc_end1-Ltmp32      ##   Call between Ltmp32 and Lfunc_end1
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
Lcst_end1:
	.byte	1                       ## >> Action Record 1 <<
                                        ##   Catch TypeInfo 1
	.byte	0                       ##   No further actions
	.p2align	2
                                        ## >> Catch TypeInfos <<
	.long	0                       ## TypeInfo 1
Lttbase1:
	.p2align	2
                                        ## -- End function
	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90         ## -- Begin function std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&): ## @std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ios_base::flags() const
_std::__1::ios_base::flags() const:           ## @std::__1::ios_base::flags() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	eax, dword ptr [rax   8]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const
_std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const: ## @std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 16], rax ## 8-byte Spill
	call	_std::__1::char_traits<char>::eof()
	mov	rcx, qword ptr [rbp - 16] ## 8-byte Reload
	mov	esi, dword ptr [rcx   144]
	mov	edi, eax
	call	_std::__1::char_traits<char>::eq_int_type(int, int)
	test	al, 1
	jne	LBB17_1
	jmp	LBB17_2
LBB17_1:
	mov	rdi, qword ptr [rbp - 16] ## 8-byte Reload
	mov	esi, 32
	call	_std::__1::basic_ios<char, std::__1::char_traits<char> >::widen(char) const
	movsx	ecx, al
	mov	rdx, qword ptr [rbp - 16] ## 8-byte Reload
	mov	dword ptr [rdx   144], ecx
LBB17_2:
	mov	rax, qword ptr [rbp - 16] ## 8-byte Reload
	mov	ecx, dword ptr [rax   144]
                                        ## kill: def $cl killed $cl killed $ecx
	movsx	edx, cl
	mov	eax, edx
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed() const
_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed() const: ## @std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	cmp	qword ptr [rax], 0
	sete	cl
	and	cl, 1
	movzx	eax, cl
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate(unsigned int)
_std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate(unsigned int): ## @std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate(unsigned int)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	dword ptr [rbp - 12], esi
	mov	rax, qword ptr [rbp - 8]
	mov	esi, dword ptr [rbp - 12]
	mov	rdi, rax
	call	_std::__1::ios_base::setstate(unsigned int)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.private_extern	___clang_call_terminate ## -- Begin function __clang_call_terminate
	.globl	___clang_call_terminate
	.weak_definition	___clang_call_terminate
	.p2align	4, 0x90
___clang_call_terminate:                ## @__clang_call_terminate
## ».0:
	push	rax
	call	___cxa_begin_catch
	mov	qword ptr [rsp], rax    ## 8-byte Spill
	call	_std::terminate()
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__get_nullptr_t()
_std::__1::__get_nullptr_t():         ## @std::__1::__get_nullptr_t()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	lea	rdi, [rbp - 8]
	mov	rsi, -1
	call	_std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*)
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const
_std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const: ## @std::__1::nullptr_t::operator std::__1::basic_streambuf<char, std::__1::char_traits<char> >*<std::__1::basic_streambuf<char, std::__1::char_traits<char> > >() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	xor	eax, eax
                                        ## kill: def $rax killed $eax
	mov	qword ptr [rbp - 8], rdi
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ios_base::width() const
_std::__1::ios_base::width() const:           ## @std::__1::ios_base::width() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	rax, qword ptr [rax   24]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn(char const*, long)
_std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn(char const*, long): ## @std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn(char const*, long)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rax, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 24]
	mov	rcx, qword ptr [rax]
	mov	rdi, rax
	call	qword ptr [rcx   96]
	add	rsp, 32
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char)
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char): ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 32
                                        ## kill: def $dl killed $dl killed $edx
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	byte ptr [rbp - 17], dl
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	movsx	edx, byte ptr [rbp - 17]
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char)
	add	rsp, 32
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data() const
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data() const: ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer() const
	mov	rdi, rax
	call	_char const* std::__1::__to_address<char const>(char const*)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ios_base::width(long)
_std::__1::ios_base::width(long):            ## @std::__1::ios_base::width(long)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rax   24]
	mov	qword ptr [rbp - 24], rcx
	mov	rcx, qword ptr [rbp - 16]
	mov	qword ptr [rax   24], rcx
	mov	rax, qword ptr [rbp - 24]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*)
_std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*):   ## @std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*)
_std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*):   ## @std::__1::nullptr_t::nullptr_t(int std::__1::nullptr_t::__nat::*)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rax, qword ptr [rbp - 8]
	mov	qword ptr [rax], 0
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char)
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char): ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(unsigned long, char)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 48
                                        ## kill: def $dl killed $dl killed $edx
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	byte ptr [rbp - 17], dl
	mov	rax, qword ptr [rbp - 8]
	mov	rdi, rax
	lea	rsi, [rbp - 24]
	lea	rdx, [rbp - 32]
	mov	qword ptr [rbp - 40], rax ## 8-byte Spill
	call	_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&)
	mov	rsi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 40] ## 8-byte Reload
	movsx	edx, byte ptr [rbp - 17]
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
	add	rsp, 48
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&)
_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&): ## @std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 24]
	call	_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&)
	add	rsp, 32
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&)
_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&): ## @std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<std::__1::__default_init_tag, std::__1::__default_init_tag>(std::__1::__default_init_tag&&, std::__1::__default_init_tag&&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 80
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, rax
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 48], rax ## 8-byte Spill
	mov	qword ptr [rbp - 56], rcx ## 8-byte Spill
	call	_std::__1::__default_init_tag&& std::__1::forward<std::__1::__default_init_tag>(std::__1::remove_reference<std::__1::__default_init_tag>::type&)
	mov	rdi, qword ptr [rbp - 56] ## 8-byte Reload
	mov	qword ptr [rbp - 64], rax ## 8-byte Spill
	call	_std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem(std::__1::__default_init_tag)
	mov	rax, qword ptr [rbp - 48] ## 8-byte Reload
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 72], rax ## 8-byte Spill
	call	_std::__1::__default_init_tag&& std::__1::forward<std::__1::__default_init_tag>(std::__1::remove_reference<std::__1::__default_init_tag>::type&)
	mov	rdi, qword ptr [rbp - 72] ## 8-byte Reload
	mov	qword ptr [rbp - 80], rax ## 8-byte Spill
	call	_std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem(std::__1::__default_init_tag)
	add	rsp, 80
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__default_init_tag&& std::__1::forward<std::__1::__default_init_tag>(std::__1::remove_reference<std::__1::__default_init_tag>::type&)
_std::__1::__default_init_tag&& std::__1::forward<std::__1::__default_init_tag>(std::__1::remove_reference<std::__1::__default_init_tag>::type&): ## @std::__1::__default_init_tag&& std::__1::forward<std::__1::__default_init_tag>(std::__1::remove_reference<std::__1::__default_init_tag>::type&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem(std::__1::__default_init_tag)
_std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem(std::__1::__default_init_tag): ## @std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem(std::__1::__default_init_tag)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 16], rdi
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem(std::__1::__default_init_tag)
_std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem(std::__1::__default_init_tag): ## @std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem(std::__1::__default_init_tag)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 16], rdi
	mov	rax, qword ptr [rbp - 16]
	mov	rdi, rax
	call	_std::__1::allocator<char>::allocator()
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::allocator<char>::allocator()
_std::__1::allocator<char>::allocator():            ## @std::__1::allocator<char>::allocator()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function char const* std::__1::__to_address<char const>(char const*)
_char const* std::__1::__to_address<char const>(char const*):   ## @char const* std::__1::__to_address<char const>(char const*)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer() const
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer() const: ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	rdi, rax
	mov	qword ptr [rbp - 16], rax ## 8-byte Spill
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const
	test	al, 1
	jne	LBB38_1
	jmp	LBB38_2
LBB38_1:
	mov	rdi, qword ptr [rbp - 16] ## 8-byte Reload
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer() const
	mov	qword ptr [rbp - 24], rax ## 8-byte Spill
	jmp	LBB38_3
LBB38_2:
	mov	rdi, qword ptr [rbp - 16] ## 8-byte Reload
	call	_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer() const
	mov	qword ptr [rbp - 24], rax ## 8-byte Spill
LBB38_3:
	mov	rax, qword ptr [rbp - 24] ## 8-byte Reload
	add	rsp, 32
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const: ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::first() const
	movzx	ecx, byte ptr [rax]
	mov	eax, ecx
	and	rax, 1
	cmp	rax, 0
	setne	dl
	and	dl, 1
	movzx	eax, dl
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer() const
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer() const: ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::first() const
	mov	rax, qword ptr [rax   16]
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer() const
_std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer() const: ## @std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::first() const
	add	rax, 1
	mov	rdi, rax
	call	_std::__1::pointer_traits<char const*>::pointer_to(char const&)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::first() const
_std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::first() const: ## @std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::first() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	rdi, rax
	call	_std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__get() const
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__get() const
_std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__get() const: ## @std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__get() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::pointer_traits<char const*>::pointer_to(char const&)
_std::__1::pointer_traits<char const*>::pointer_to(char const&): ## @std::__1::pointer_traits<char const*>::pointer_to(char const&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_char const* std::__1::addressof<char const>(char const&)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function char const* std::__1::addressof<char const>(char const&)
_char const* std::__1::addressof<char const>(char const&):      ## @char const* std::__1::addressof<char const>(char const&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
_std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&): ## @std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, ___gxx_personality_v0
	.cfi_lsda 16, Lexception2
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rcx]
	mov	rdx, qword ptr [rdx - 24]
	add	rcx, rdx
Ltmp34:
	mov	rdi, rcx
	mov	qword ptr [rbp - 40], rax ## 8-byte Spill
	call	_std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf() const
Ltmp35:
	mov	qword ptr [rbp - 48], rax ## 8-byte Spill
	jmp	LBB46_1
LBB46_1:
	mov	rax, qword ptr [rbp - 40] ## 8-byte Reload
	mov	rcx, qword ptr [rbp - 48] ## 8-byte Reload
	mov	qword ptr [rax], rcx
	add	rsp, 48
	pop	rbp
	ret
LBB46_2:
Ltmp36:
                                        ## kill: def $edx killed $edx killed $rdx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], edx
## ».3:
	mov	rdi, qword ptr [rbp - 24]
	call	___cxa_call_unexpected
Lfunc_end2:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table46:
Lexception2:
	.byte	255                     ## @LPStart Encoding = omit
	.byte	155                     ## @TType Encoding = indirect pcrel sdata4
	.uleb128 Lttbase2-Lttbaseref2
Lttbaseref2:
	.byte	1                       ## Call site Encoding = uleb128
	.uleb128 Lcst_end2-Lcst_begin2
Lcst_begin2:
	.uleb128 Ltmp34-Lfunc_begin2    ## >> Call Site 1 <<
	.uleb128 Ltmp35-Ltmp34          ##   Call between Ltmp34 and Ltmp35
	.uleb128 Ltmp36-Lfunc_begin2    ##     jumps to Ltmp36
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp35-Lfunc_begin2    ## >> Call Site 2 <<
	.uleb128 Lfunc_end2-Ltmp35      ##   Call between Ltmp35 and Lfunc_end2
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
Lcst_end2:
	.byte	127                     ## >> Action Record 1 <<
                                        ##   Filter TypeInfo -1
	.byte	0                       ##   No further actions
	.p2align	2
Lttbase2:
                                        ## >> Filter TypeInfos <<
	.byte	0
	.p2align	2
                                        ## -- End function
	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf() const
_std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf() const: ## @std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	rdi, rax
	call	_std::__1::ios_base::rdbuf() const
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ios_base::rdbuf() const
_std::__1::ios_base::rdbuf() const:           ## @std::__1::ios_base::rdbuf() const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	mov	rax, qword ptr [rax   40]
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_std::__1::char_traits<char>::eq_int_type(int, int) ## -- Begin function std::__1::char_traits<char>::eq_int_type(int, int)
	.weak_definition	_std::__1::char_traits<char>::eq_int_type(int, int)
	.p2align	4, 0x90
_std::__1::char_traits<char>::eq_int_type(int, int): ## @std::__1::char_traits<char>::eq_int_type(int, int)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	dword ptr [rbp - 4], edi
	mov	dword ptr [rbp - 8], esi
	mov	eax, dword ptr [rbp - 4]
	cmp	eax, dword ptr [rbp - 8]
	sete	cl
	and	cl, 1
	movzx	eax, cl
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.globl	_std::__1::char_traits<char>::eof() ## -- Begin function std::__1::char_traits<char>::eof()
	.weak_definition	_std::__1::char_traits<char>::eof()
	.p2align	4, 0x90
_std::__1::char_traits<char>::eof():       ## @std::__1::char_traits<char>::eof()
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	eax, 4294967295
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::basic_ios<char, std::__1::char_traits<char> >::widen(char) const
_std::__1::basic_ios<char, std::__1::char_traits<char> >::widen(char) const: ## @std::__1::basic_ios<char, std::__1::char_traits<char> >::widen(char) const
Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, ___gxx_personality_v0
	.cfi_lsda 16, Lexception3
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 80
                                        ## kill: def $sil killed $sil killed $esi
	mov	qword ptr [rbp - 8], rdi
	mov	byte ptr [rbp - 9], sil
	mov	rsi, qword ptr [rbp - 8]
	lea	rax, [rbp - 24]
	mov	rdi, rax
	mov	qword ptr [rbp - 48], rax ## 8-byte Spill
	call	_std::__1::ios_base::getloc() const
Ltmp37:
	mov	rdi, qword ptr [rbp - 48] ## 8-byte Reload
	call	_std::__1::ctype<char> const& std::__1::use_facet<std::__1::ctype<char> >(std::__1::locale const&)
Ltmp38:
	mov	qword ptr [rbp - 56], rax ## 8-byte Spill
	jmp	LBB51_1
LBB51_1:
	movsx	esi, byte ptr [rbp - 9]
Ltmp39:
	mov	rdi, qword ptr [rbp - 56] ## 8-byte Reload
	call	_std::__1::ctype<char>::widen(char) const
Ltmp40:
	mov	byte ptr [rbp - 57], al ## 1-byte Spill
	jmp	LBB51_2
LBB51_2:
	lea	rdi, [rbp - 24]
	call	_std::__1::locale::~locale()
	mov	al, byte ptr [rbp - 57] ## 1-byte Reload
	movsx	eax, al
	add	rsp, 80
	pop	rbp
	ret
LBB51_3:
Ltmp41:
                                        ## kill: def $edx killed $edx killed $rdx
	mov	qword ptr [rbp - 32], rax
	mov	dword ptr [rbp - 36], edx
Ltmp42:
	lea	rdi, [rbp - 24]
	call	_std::__1::locale::~locale()
Ltmp43:
	jmp	LBB51_4
LBB51_4:
	jmp	LBB51_5
LBB51_5:
	mov	rdi, qword ptr [rbp - 32]
	call	__Unwind_Resume
	ud2
LBB51_6:
Ltmp44:
	mov	rdi, rax
	mov	qword ptr [rbp - 72], rdx ## 8-byte Spill
	call	___clang_call_terminate
Lfunc_end3:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table51:
Lexception3:
	.byte	255                     ## @LPStart Encoding = omit
	.byte	155                     ## @TType Encoding = indirect pcrel sdata4
	.uleb128 Lttbase3-Lttbaseref3
Lttbaseref3:
	.byte	1                       ## Call site Encoding = uleb128
	.uleb128 Lcst_end3-Lcst_begin3
Lcst_begin3:
	.uleb128 Lfunc_begin3-Lfunc_begin3 ## >> Call Site 1 <<
	.uleb128 Ltmp37-Lfunc_begin3    ##   Call between Lfunc_begin3 and Ltmp37
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp37-Lfunc_begin3    ## >> Call Site 2 <<
	.uleb128 Ltmp40-Ltmp37          ##   Call between Ltmp37 and Ltmp40
	.uleb128 Ltmp41-Lfunc_begin3    ##     jumps to Ltmp41
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp40-Lfunc_begin3    ## >> Call Site 3 <<
	.uleb128 Ltmp42-Ltmp40          ##   Call between Ltmp40 and Ltmp42
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
	.uleb128 Ltmp42-Lfunc_begin3    ## >> Call Site 4 <<
	.uleb128 Ltmp43-Ltmp42          ##   Call between Ltmp42 and Ltmp43
	.uleb128 Ltmp44-Lfunc_begin3    ##     jumps to Ltmp44
	.byte	1                       ##   On action: 1
	.uleb128 Ltmp43-Lfunc_begin3    ## >> Call Site 5 <<
	.uleb128 Lfunc_end3-Ltmp43      ##   Call between Ltmp43 and Lfunc_end3
	.byte	0                       ##     has no landing pad
	.byte	0                       ##   On action: cleanup
Lcst_end3:
	.byte	1                       ## >> Action Record 1 <<
                                        ##   Catch TypeInfo 1
	.byte	0                       ##   No further actions
	.p2align	2
                                        ## >> Catch TypeInfos <<
	.long	0                       ## TypeInfo 1
Lttbase3:
	.p2align	2
                                        ## -- End function
	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90         ## -- Begin function std::__1::ctype<char> const& std::__1::use_facet<std::__1::ctype<char> >(std::__1::locale const&)
_std::__1::ctype<char> const& std::__1::use_facet<std::__1::ctype<char> >(std::__1::locale const&): ## @std::__1::ctype<char> const& std::__1::use_facet<std::__1::ctype<char> >(std::__1::locale const&)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	rsi, qword ptr [rip   __ZNSt3__15ctypeIcE2idE@GOTPCREL]
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_std::__1::locale::use_facet(std::__1::locale::id&) const
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ctype<char>::widen(char) const
_std::__1::ctype<char>::widen(char) const:           ## @std::__1::ctype<char>::widen(char) const
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
                                        ## kill: def $sil killed $sil killed $esi
	mov	qword ptr [rbp - 8], rdi
	mov	byte ptr [rbp - 9], sil
	mov	rax, qword ptr [rbp - 8]
	mov	cl, byte ptr [rbp - 9]
	mov	rdx, qword ptr [rax]
	mov	rdi, rax
	movsx	esi, cl
	call	qword ptr [rdx   56]
	movsx	eax, al
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.p2align	4, 0x90         ## -- Begin function std::__1::ios_base::setstate(unsigned int)
_std::__1::ios_base::setstate(unsigned int):         ## @std::__1::ios_base::setstate(unsigned int)
	.cfi_startproc
## ».0:
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	dword ptr [rbp - 12], esi
	mov	rax, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rax   32]
	or	ecx, dword ptr [rbp - 12]
	mov	rdi, rax
	mov	esi, ecx
	call	_std::__1::ios_base::clear(unsigned int)
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"PlainOldClass x_: "

L_.str.1:                               ## @.str.1
	.asciz	"Base x_: "

	.section	__DATA,__const
	.globl	_vtable for CoolClass         ## @vtable for CoolClass
	.weak_def_can_be_hidden	_vtable for CoolClass
	.p2align	3
_vtable for CoolClass:
	.quad	0
	.quad	_typeinfo for CoolClass
	.quad	_CoolClass::set(int)
	.quad	_CoolClass::get()

	.section	__TEXT,__const
	.globl	_typeinfo name for CoolClass         ## @typeinfo name for CoolClass
	.weak_definition	_typeinfo name for CoolClass
_typeinfo name for CoolClass:
	.asciz	"9CoolClass"

	.globl	_typeinfo name for Base              ## @typeinfo name for Base
	.weak_definition	_typeinfo name for Base
_typeinfo name for Base:
	.asciz	"4Base"

	.section	__DATA,__const
	.globl	_typeinfo for Base              ## @typeinfo for Base
	.weak_definition	_typeinfo for Base
	.p2align	3
_typeinfo for Base:
	.quad	_vtable for __cxxabiv1::__class_type_info 16
	.quad	_typeinfo name for Base

	.globl	_typeinfo for CoolClass         ## @typeinfo for CoolClass
	.weak_definition	_typeinfo for CoolClass
	.p2align	3
_typeinfo for CoolClass:
	.quad	_vtable for __cxxabiv1::__si_class_type_info 16
	.quad	_typeinfo name for CoolClass
	.quad	_typeinfo for Base

	.globl	_vtable for Base              ## @vtable for Base
	.weak_def_can_be_hidden	_vtable for Base
	.p2align	3
_vtable for Base:
	.quad	0
	.quad	_typeinfo for Base
	.quad	___cxa_pure_virtual
	.quad	___cxa_pure_virtual

.subsections_via_symbols